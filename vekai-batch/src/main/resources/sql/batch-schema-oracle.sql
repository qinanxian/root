
--/*       spring-batch 自带的表    */

DROP TABLE  BATCH_STEP_EXECUTION_CONTEXT ;
DROP TABLE  BATCH_JOB_EXECUTION_CONTEXT ;
DROP TABLE  BATCH_STEP_EXECUTION ;
DROP TABLE  BATCH_JOB_EXECUTION_PARAMS ;
DROP TABLE  BATCH_JOB_EXECUTION ;
DROP TABLE  BATCH_JOB_INSTANCE ;

DROP SEQUENCE  BATCH_STEP_EXECUTION_SEQ ;
DROP SEQUENCE  BATCH_JOB_EXECUTION_SEQ ;
DROP SEQUENCE  BATCH_JOB_SEQ ;

-- Autogenerated: do not edit this file

CREATE TABLE BATCH_JOB_INSTANCE  (
	JOB_INSTANCE_ID NUMBER(19,0)  NOT NULL PRIMARY KEY ,
	VERSION NUMBER(19,0) ,
	JOB_NAME VARCHAR2(100) NOT NULL,
	JOB_KEY VARCHAR2(32) NOT NULL,
	constraint JOB_INST_UN unique (JOB_NAME, JOB_KEY)
) ;

CREATE TABLE BATCH_JOB_EXECUTION  (
	JOB_EXECUTION_ID NUMBER(19,0)  NOT NULL PRIMARY KEY ,
	VERSION NUMBER(19,0)  ,
	JOB_INSTANCE_ID NUMBER(19,0) NOT NULL,
	CREATE_TIME TIMESTAMP NOT NULL,
	START_TIME TIMESTAMP DEFAULT NULL ,
	END_TIME TIMESTAMP DEFAULT NULL ,
	STATUS VARCHAR2(10) ,
	EXIT_CODE VARCHAR2(2500) ,
	EXIT_MESSAGE VARCHAR2(2500) ,
	LAST_UPDATED TIMESTAMP,
	JOB_CONFIGURATION_LOCATION VARCHAR(2500) NULL,
	constraint JOB_INST_EXEC_FK foreign key (JOB_INSTANCE_ID)
	references BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
) ;

CREATE TABLE BATCH_JOB_EXECUTION_PARAMS  (
	JOB_EXECUTION_ID NUMBER(19,0) NOT NULL ,
	TYPE_CD VARCHAR2(6) NOT NULL ,
	KEY_NAME VARCHAR2(100) NOT NULL ,
	STRING_VAL VARCHAR2(250) ,
	DATE_VAL TIMESTAMP DEFAULT NULL ,
	LONG_VAL NUMBER(19,0) ,
	DOUBLE_VAL NUMBER ,
	IDENTIFYING CHAR(1) NOT NULL ,
	constraint JOB_EXEC_PARAMS_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ;

CREATE TABLE BATCH_STEP_EXECUTION  (
	STEP_EXECUTION_ID NUMBER(19,0)  NOT NULL PRIMARY KEY ,
	VERSION NUMBER(19,0) NOT NULL,
	STEP_NAME VARCHAR2(100) NOT NULL,
	JOB_EXECUTION_ID NUMBER(19,0) NOT NULL,
	START_TIME TIMESTAMP NOT NULL ,
	END_TIME TIMESTAMP DEFAULT NULL ,
	STATUS VARCHAR2(10) ,
	COMMIT_COUNT NUMBER(19,0) ,
	READ_COUNT NUMBER(19,0) ,
	FILTER_COUNT NUMBER(19,0) ,
	WRITE_COUNT NUMBER(19,0) ,
	READ_SKIP_COUNT NUMBER(19,0) ,
	WRITE_SKIP_COUNT NUMBER(19,0) ,
	PROCESS_SKIP_COUNT NUMBER(19,0) ,
	ROLLBACK_COUNT NUMBER(19,0) ,
	EXIT_CODE VARCHAR2(2500) ,
	EXIT_MESSAGE VARCHAR2(2500) ,
	LAST_UPDATED TIMESTAMP,
	constraint JOB_EXEC_STEP_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ;

CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT  (
	STEP_EXECUTION_ID NUMBER(19,0) NOT NULL PRIMARY KEY,
	SHORT_CONTEXT VARCHAR2(2500) NOT NULL,
	SERIALIZED_CONTEXT CLOB ,
	constraint STEP_EXEC_CTX_FK foreign key (STEP_EXECUTION_ID)
	references BATCH_STEP_EXECUTION(STEP_EXECUTION_ID)
) ;

CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT  (
	JOB_EXECUTION_ID NUMBER(19,0) NOT NULL PRIMARY KEY,
	SHORT_CONTEXT VARCHAR2(2500) NOT NULL,
	SERIALIZED_CONTEXT CLOB ,
	constraint JOB_EXEC_CTX_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ;

CREATE SEQUENCE BATCH_STEP_EXECUTION_SEQ START WITH 0 MINVALUE 0 MAXVALUE 9223372036854775807 NOCYCLE;
CREATE SEQUENCE BATCH_JOB_EXECUTION_SEQ START WITH 0 MINVALUE 0 MAXVALUE 9223372036854775807 NOCYCLE;
CREATE SEQUENCE BATCH_JOB_SEQ START WITH 0 MINVALUE 0 MAXVALUE 9223372036854775807 NOCYCLE;


--/*       vekai-batch 增加的表    */

DROP TABLE  APNS_BATCH_LOG ;

CREATE TABLE APNS_BATCH_LOG(
    JOB_INSTANCE_ID NUMBER  NOT NULL ,
    BATCH_JOB_KEY NVARCHAR2(128)   ,
    BATCH_JOB_NAME NVARCHAR2(128)   ,
    LINE_NUMBER NUMBER  NOT NULL ,
    LOGGER_NAME NVARCHAR2(128)   ,
    LOG_LEVEL NVARCHAR2(32)   ,
    THREAD_NAME NVARCHAR2(128)   ,
    LOG_MESSAGE NVARCHAR2(3072)   ,
    LOG_TIMESTAMP NUMBER   ,
    CREATED_BY VARCHAR2(32)   ,
    CREATED_TIME DATE   ,
    UPDATED_BY VARCHAR2(32)   ,
    UPDATED_TIME DATE   ,
    PRIMARY KEY (JOB_INSTANCE_ID,LINE_NUMBER)
);

COMMENT ON TABLE APNS_BATCH_LOG IS '批量日志;对接BATCH批量平台的日志记录，但BATCH是一个独立的体系，不能把这个表纳入其中';
COMMENT ON COLUMN APNS_BATCH_LOG.JOB_INSTANCE_ID IS '作业实例号';
COMMENT ON COLUMN APNS_BATCH_LOG.BATCH_JOB_KEY IS '批量标识';
COMMENT ON COLUMN APNS_BATCH_LOG.BATCH_JOB_NAME IS '批量名称';
COMMENT ON COLUMN APNS_BATCH_LOG.LINE_NUMBER IS '行号';
COMMENT ON COLUMN APNS_BATCH_LOG.LOGGER_NAME IS '日志名称';
COMMENT ON COLUMN APNS_BATCH_LOG.LOG_LEVEL IS '日志级别';
COMMENT ON COLUMN APNS_BATCH_LOG.THREAD_NAME IS '线程名';
COMMENT ON COLUMN APNS_BATCH_LOG.LOG_MESSAGE IS '日志内容';
COMMENT ON COLUMN APNS_BATCH_LOG.LOG_TIMESTAMP IS '日志时间';
COMMENT ON COLUMN APNS_BATCH_LOG.CREATED_BY IS '创建人';
COMMENT ON COLUMN APNS_BATCH_LOG.CREATED_TIME IS '创建时间';
COMMENT ON COLUMN APNS_BATCH_LOG.UPDATED_BY IS '更新人';
COMMENT ON COLUMN APNS_BATCH_LOG.UPDATED_TIME IS '更新时间';
