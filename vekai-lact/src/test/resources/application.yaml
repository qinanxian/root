server: { port: 8080,contextPath: /pagelet ,sessionTimeout: 30}

spring:
  profiles:
    active: dev
  datasource:
    #打开PSCache，并且指定每个连接上PSCache的大小
    pool-prepared-statements: true
    max-pool-prepared-statement-per-connection-size: 20
    filters: stat,wall,slf4j #配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    use-global-data-source-stat: true #合并多个DruidDataSource的监控数据
  autoconfigure:
    exclude: [org.activiti.spring.boot.SecurityAutoConfiguration,org.activiti.spring.boot.JpaProcessEngineAutoConfiguration,org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration]


  ##############################
  # 以下是配置不同的模板引擎
  ##############################
  #    Default Extensions are:
  #    *.html - Thymeleaf
  #    *.tpl - Groovy
  #    *.ftl - Freemarker
  #    *.vm - Velocity

  freemarker:
    cache: false
    template-loader-path: ["classpath:/templates/","classpath:/webapp/"]
    prefer-file-system-access: false  #不使用文件系统优先，而使用classpath下的资源文件优先，解决打jar包运行后，出现的异常问题
    allow-request-override: false     #指定HttpServletRequest的属性是否可以覆盖controller的model的同名项
    check-template-location: true     #check-template-location
    charset: UTF-8
    content-type: text/html
    #request/session==true请求和会话属性都被复制到模板的属性集中，此时spring必须设置为true
    expose-request-attributes: false
    expose-session-attributes: false
    expose-spring-macro-helpers: true
    request-context-attribute: request
    prefix:
    suffix: .ftl
    settings:
      classic_compatible: true
#      auto_import: "macro/body.ftl as body"
debug: true
#日志配置
logging:
  config: classpath:logback.xml

management:
  security:
    enabled: false  #否则actuator的监控会报401

#Fisok的相关配置信息
com.vekai:
  runtime:
    druid-login-username: rober
    druid-login-password: r0ber
  base:
#    auto-includes:
#      - /base/macro/body.ftl
#      - /base/macro/body1.ftl
